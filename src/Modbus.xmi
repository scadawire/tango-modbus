<?xml version="1.0" encoding="ASCII"?>
<pogoDsl:PogoSystem xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:pogoDsl="http://www.esrf.fr/tango/pogo/PogoDsl">
  <classes name="Modbus" pogoRevision="9.4">
    <description description="A Class to handle the modbus protocol over TCP/IP or Serial (RTU)." title="Modbus" sourcePath="/mntdirect/_users/tappret/Modbus/src" language="Cpp" filestogenerate="XMI   file,Code files,Protected Regions" license="GPL" copyright="" hasMandatoryProperty="false" hasConcreteProperty="true" hasAbstractCommand="false" hasAbstractAttribute="false">
      <inheritances classname="Device_Impl" sourcePath=""/>
      <identification contact="at esrf.fr - pons" author="pons" emailDomain="esrf.fr" classFamily="Communication" siteSpecific="" platform="All Platforms" bus="Modbus" manufacturer="none" reference=""/>
    </description>
    <deviceProperties name="Protocol" description="RTU => Binary serial communication.&#xA;TCP => Communication over ethernet.">
      <type xsi:type="pogoDsl:StringType"/>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
      <DefaultPropValue>RTU</DefaultPropValue>
    </deviceProperties>
    <deviceProperties name="Iphost" description="The host IP address used with the TCP protocol">
      <type xsi:type="pogoDsl:StringType"/>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
    </deviceProperties>
    <deviceProperties name="Serialline" description="The name of the serial line device used with RTU protocol">
      <type xsi:type="pogoDsl:StringType"/>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
    </deviceProperties>
    <deviceProperties name="Address" description="Node index used with the RTU or TCP protocol">
      <type xsi:type="pogoDsl:ShortType"/>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
      <DefaultPropValue>1</DefaultPropValue>
    </deviceProperties>
    <deviceProperties name="CacheConfig" description="Describe which data has to be cached.&#xA;Each set of cached data is described by 3 parameters which are:&#xA;1 - Command to be used to read data (ReadHoldingRegisters, ReadInputStatus&#xA;ReadInutRegisters or ReadMultipleCoilStatus)&#xA;2 - First address to be read&#xA;3 - Number of data to read">
      <type xsi:type="pogoDsl:StringVectorType"/>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
    </deviceProperties>
    <deviceProperties name="CacheSleep" description="Cache update thread main loop sleeping time (in ms)CacheSleep">
      <type xsi:type="pogoDsl:IntType"/>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
      <DefaultPropValue>1000</DefaultPropValue>
    </deviceProperties>
    <deviceProperties name="TCPConnectTimeout" description="TCP connection timeout (in sec)">
      <type xsi:type="pogoDsl:DoubleType"/>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
      <DefaultPropValue>0.3</DefaultPropValue>
    </deviceProperties>
    <deviceProperties name="TCPTimeout" description="Timeout used when the TCP protocol is used (in sec)">
      <type xsi:type="pogoDsl:DoubleType"/>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
      <DefaultPropValue>1.0</DefaultPropValue>
    </deviceProperties>
    <deviceProperties name="LogFile" description="Name of the file where are stored invalid frame">
      <type xsi:type="pogoDsl:StringType"/>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
    </deviceProperties>
    <deviceProperties name="TCPNoDelay" description="Disable or enable Nagle`s algorithm.">
      <type xsi:type="pogoDsl:BooleanType"/>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
      <DefaultPropValue>false</DefaultPropValue>
    </deviceProperties>
    <deviceProperties name="TCPQuickAck" description="Set this property to true to enable TCP quick acknowledgements">
      <type xsi:type="pogoDsl:BooleanType"/>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
      <DefaultPropValue>false</DefaultPropValue>
    </deviceProperties>
    <deviceProperties name="NumberOfRetry" description="Number Of Retry for all command in case failed.">
      <type xsi:type="pogoDsl:ShortType"/>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
      <DefaultPropValue>0</DefaultPropValue>
    </deviceProperties>
    <deviceProperties name="SleepBetweenRetry" description="Sleep Between Retry in Miliseconds">
      <type xsi:type="pogoDsl:ShortType"/>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
      <DefaultPropValue>100</DefaultPropValue>
    </deviceProperties>
    <commands name="State" description="This command gets the device state (stored in its device_state data member) and returns it to the caller." execMethod="dev_state" displayLevel="OPERATOR" polledPeriod="0">
      <argin description="none">
        <type xsi:type="pogoDsl:VoidType"/>
      </argin>
      <argout description="Device state">
        <type xsi:type="pogoDsl:StateType"/>
      </argout>
      <status abstract="true" inherited="true" concrete="true"/>
    </commands>
    <commands name="Status" description="This command gets the device status (stored in its device_status data member) and returns it to the caller." execMethod="dev_status" displayLevel="OPERATOR" polledPeriod="0">
      <argin description="none">
        <type xsi:type="pogoDsl:VoidType"/>
      </argin>
      <argout description="Device status">
        <type xsi:type="pogoDsl:ConstStringType"/>
      </argout>
      <status abstract="true" inherited="true" concrete="true"/>
    </commands>
    <commands name="ForceSingleCoil" description="Write single coil (digital I/O) state." execMethod="force_single_coil" displayLevel="OPERATOR" polledPeriod="0" isDynamic="false">
      <argin description="aring[0] = coil address&#xA;argin[1] = coil value (0/1)">
        <type xsi:type="pogoDsl:ShortArrayType"/>
      </argin>
      <argout description="">
        <type xsi:type="pogoDsl:VoidType"/>
      </argout>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
    </commands>
    <commands name="ReadCoilStatus" description="Read coil (digital I/O) status" execMethod="read_coil_status" displayLevel="OPERATOR" polledPeriod="0" isDynamic="false">
      <argin description="Coil address">
        <type xsi:type="pogoDsl:ShortType"/>
      </argin>
      <argout description="Coil status (0/1)">
        <type xsi:type="pogoDsl:ShortType"/>
      </argout>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
    </commands>
    <commands name="ReadInputStatus" description="Read discrete input status. Return one boolean per array element." execMethod="read_input_status" displayLevel="OPERATOR" polledPeriod="0" isDynamic="false">
      <argin description="argin[0] = Input address&#xA;argin[1] = number of inputs">
        <type xsi:type="pogoDsl:ShortArrayType"/>
      </argin>
      <argout description="argout[0..n-1] = Input status (0/1)">
        <type xsi:type="pogoDsl:CharArrayType"/>
      </argout>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
    </commands>
    <commands name="ReadHoldingRegisters" description="Read multiple 16bits registers." execMethod="read_holding_registers" displayLevel="OPERATOR" polledPeriod="0" isDynamic="false">
      <argin description="aring[0] = Register start address&#xA;argin[1] = Number of registers">
        <type xsi:type="pogoDsl:ShortArrayType"/>
      </argin>
      <argout description="argout[0..n-1] Holding 16bits registers.">
        <type xsi:type="pogoDsl:ShortArrayType"/>
      </argout>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
    </commands>
    <commands name="ReadInputRegisters" description="Read Multiple 16bits input registers." execMethod="read_input_registers" displayLevel="OPERATOR" polledPeriod="0" isDynamic="false">
      <argin description="argin[0] = Register start address&#xA;argin[1] = Number of registers">
        <type xsi:type="pogoDsl:ShortArrayType"/>
      </argin>
      <argout description="argout[0..n-1] = Input 16bits registers">
        <type xsi:type="pogoDsl:ShortArrayType"/>
      </argout>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
    </commands>
    <commands name="PresetSingleRegister" description="Write single 16bits register." execMethod="preset_single_register" displayLevel="OPERATOR" polledPeriod="0" isDynamic="false">
      <argin description="argin[0] = Register address&#xA;argin[1] = Register value">
        <type xsi:type="pogoDsl:ShortArrayType"/>
      </argin>
      <argout description="">
        <type xsi:type="pogoDsl:VoidType"/>
      </argout>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
    </commands>
    <commands name="FetchCommEventCtr" description="Fetch communications event counter." execMethod="fetch_comm_event_ctr" displayLevel="OPERATOR" polledPeriod="0" isDynamic="false">
      <argin description="">
        <type xsi:type="pogoDsl:VoidType"/>
      </argin>
      <argout description="argout[0] = Status&#xA;argout[1] = Event count">
        <type xsi:type="pogoDsl:ShortArrayType"/>
      </argout>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
    </commands>
    <commands name="ForceMultipleCoils" description="" execMethod="force_multiple_coils" displayLevel="OPERATOR" polledPeriod="0" isDynamic="false">
      <argin description="argin[0] = Coil start address&#xA;argin[1] = Number of coil&#xA;argin[2..n+1] = Coil values">
        <type xsi:type="pogoDsl:ShortArrayType"/>
      </argin>
      <argout description="">
        <type xsi:type="pogoDsl:VoidType"/>
      </argout>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
    </commands>
    <commands name="ReadMultipleCoilsStatus" description="Read multiple coil (digital I/O) status." execMethod="read_multiple_coils_status" displayLevel="OPERATOR" polledPeriod="0" isDynamic="false">
      <argin description="argin[0] = Coil start address&#xA;argin[1] = Number of coils">
        <type xsi:type="pogoDsl:ShortArrayType"/>
      </argin>
      <argout description="argout[0..n-1] = Coil values">
        <type xsi:type="pogoDsl:ShortArrayType"/>
      </argout>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
    </commands>
    <commands name="PresetMultipleRegisters" description="Write multiple 16bits registers." execMethod="preset_multiple_registers" displayLevel="OPERATOR" polledPeriod="0" isDynamic="false">
      <argin description="argin[0] = Register start address&#xA;argin[1] = Number of register&#xA;argin[2..n+1] = Register values">
        <type xsi:type="pogoDsl:ShortArrayType"/>
      </argin>
      <argout description="">
        <type xsi:type="pogoDsl:VoidType"/>
      </argout>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
    </commands>
    <commands name="MaskWriteRegister" description="Mask write a 16bits register." execMethod="mask_write_register" displayLevel="OPERATOR" polledPeriod="0" isDynamic="false">
      <argin description="argin[0] = Register address&#xA;argin[1] = AND mask&#xA;argin[2] = OR mask">
        <type xsi:type="pogoDsl:ShortArrayType"/>
      </argin>
      <argout description="">
        <type xsi:type="pogoDsl:VoidType"/>
      </argout>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
    </commands>
    <commands name="ReadWriteRegister" description="Read and Write multiple 16bits registers." execMethod="read_write_register" displayLevel="OPERATOR" polledPeriod="0" isDynamic="false">
      <argin description="argin[0] = Read start address&#xA;argin[1] = Number of registers to read&#xA;argin[2] = Write start address&#xA;argin[3] = Number of registers to write&#xA;argin[4..n+3] = Register values">
        <type xsi:type="pogoDsl:ShortArrayType"/>
      </argin>
      <argout description="argout[0..n-1] = Register values">
        <type xsi:type="pogoDsl:ShortArrayType"/>
      </argout>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
    </commands>
    <commands name="PresetSingleRegisterBroadcast" description="Write single 16bits register at node 0 (Node reserved for broadcast for RTU protocol on RS485 line)&#xA;Does not wait for the equipment response." execMethod="preset_single_register_broadcast" displayLevel="OPERATOR" polledPeriod="0" isDynamic="false">
      <argin description="argin[0] = Register address&#xA;argin[1] = Register value">
        <type xsi:type="pogoDsl:ShortArrayType"/>
      </argin>
      <argout description="">
        <type xsi:type="pogoDsl:VoidType"/>
      </argout>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
    </commands>
    <commands name="ReadExceptionStatus" description="Read exception status (usually a predefined range of 8 bits" execMethod="read_exception_status" displayLevel="OPERATOR" polledPeriod="0" isDynamic="false">
      <argin description="">
        <type xsi:type="pogoDsl:VoidType"/>
      </argin>
      <argout description="Exception status">
        <type xsi:type="pogoDsl:ShortType"/>
      </argout>
      <status abstract="false" inherited="false" concrete="true" concreteHere="true"/>
    </commands>
    <preferences docHome="./doc_html" makefileHome="/segfs/tango/cppserver/env"/>
    <additionalFiles name="ModbusCore" path="/mntdirect/_segfs/tango/cppserver/protocols/Modbus/src/ModbusCore.cpp"/>
    <additionalFiles name="CacheThread" path="/mntdirect/_segfs/tango/cppserver/protocols/Modbus/src/CacheThread.cpp"/>
  </classes>
</pogoDsl:PogoSystem>
